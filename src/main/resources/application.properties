spring.application.name=clockwork
server.port=${APP_PORT:5000}

kafka.bootstrap.servers=${KAFKA_BROKERS:http://localhost:9092}
kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP:scheduler}-consumers
kafka.consumer.auto-offset-reset=earliest
schedule.create.kafka.topicName=${SCHEDULE_CREATE_KAFKA_TOPIC:schedule-create}

schedule.delay.threshold.sec=30
schedule.misfire.threshold.sec=600


amazon.dynamodb.region=${AWS_REGION:AP_SOUTHEAST_1}
amazon.aws.accesskey=${AWS_ACCESS_KEY_ID:accesskey}
amazon.aws.secretkey=${AWS_SECRET_ACCESS_KEY:secret}

dynamodb.table.name.schedules=${SCHEDULE_DB:Schedules}
dynamodb.table.name.schedules.executed=${SCHEDULE_EXECUTED_DB:Schedules-Executed}
dynamodb.table.name.partitionexecution=${PARTITION_EXEC_DB:partitionExecution}


logback.path=${LOGBACK_PATH:build/}
management.metrics.export.elastic.host=${ES_METRIC_URL:http://elk1.oyorooms.io:9200}
management.metrics.export.elastic.index=${ES_METRIC_INDEX:clockwork_metrics}
management.metrics.export.elastic.step=1m

